<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pizza Cart</title>
    <script src="//unpkg.com/alpinejs" defer></script>
   <link rel="stylesheet" href="style.css">

</head>

<body>
    <h1>Perfect Pizza</h1>

    <div x-data="cartApp()" x-init="init()">
        <div class="shopping_cart">
            <div id="cart" class="cartz" x-show="true">
                <h2>Shopping Cart</h2>
                <ul>
                    <template x-for="(pizza, index) in cart" :key="index">
                        <li>
                            <span x-text="pizza.size"></span> - <span x-text="'R' + pizza.price.toFixed(2)"></span>
                            <button x-show="pizza.showRemove" x-on:click="removeFromCart(index)">Remove</button>
                        </li>
                    </template>
                </ul>
            </div>
            <div class="total-totals">
                <h3>Totals:</h3>
                <!-- Small pizzas -->
                <p>
                    Small
                    <!-- Decrement button -->
                    <button @click="decrement('small')" class="rounded-full bg-gray-200 px-2">-</button>
                    <!-- Display small pizza total price -->
                    <span x-text="'R' + totals.small.toFixed(2)"></span>
                    <!-- Increment button -->
                    <button @click="increment('small')" class="rounded-full bg-gray-200 px-2">+</button>
                </p>
                <!-- Medium pizzas -->
                <p>
                    Medium
                    <!-- Decrement button -->
                    <button @click="decrement('medium')" class="rounded-full bg-gray-200 px-2">-</button>
                    <!-- Display medium pizza total price -->
                    <span x-text="'R' + totals.medium.toFixed(2)"></span>
                    <!-- Increment button -->
                    <button @click="increment('medium')" class="rounded-full bg-gray-200 px-2">+</button>
                </p>
                <!-- Large pizzas -->
                <p>
                    Large
                    <!-- Decrement button -->
                    <button @click="decrement('large')" class="rounded-full bg-gray-200 px-2">-</button>
                    <!-- Display large pizza total price -->
                    <span x-text="'R' + totals.large.toFixed(2)"></span>
                    <!-- Increment button -->
                    <button @click="increment('large')" class="rounded-full bg-gray-200 px-2">+</button>
                </p>
                <!-- Display total cost -->
                <p>Total cost: <span x-text="'R' + totals.total.toFixed(2)"></span></p>
                <!-- Checkout button -->
                <button x-show="cart.length > 0" x-on:click="checkout" class="rounded-full bg-gray-200 px-2">Check
                    Out</button>
                <div x-show="showCheckout" class="checkout">
                    <!-- Payment input and submit button -->
                    <!-- <input type="number" x-model="paymentAmount" placeholder="Enter payment amount"> -->
                    <input type="number" placeholder="Enter payment amount">
                    <button x-on:click="processPayment" class="rounded-full bg-gray-200 px-2">Submit</button>
                    <!-- Payment message -->
                    <p x-text="paymentMessage" x-show="paymentMessage" class="message"></p>
                </div>
            </div>
        </div>

        <div class="pizzas">
            <div class="pizza medium_pizza">
                <h2>Medium Pizza</h2>
                <img src="image.png" width="125">
                <h3>R89</h3>
                <div>
                    medium mageritha pizza with 3 topping max. 2 or less toppings. 3 or less other toppings.
                </div>
                <div style="display: flex; margin-top: 10px;">
                    <button x-on:click="addToCart('medium', 89)">Buy</button>
                  </div>
            </div>
    
    
            <div class="pizza large_pizza">
                <h2>Large Pizza</h2>
                <img src="image.png" width="150">
                <h3>R129.00</h3>
                <div>
                    Large mageritha pizza with 3 topping. 3 meat toppings. 3 or less other toppings.
                </div>
                <div style="display: flex; margin-top: 10px;">
                    <button x-on:click="addToCart('large', 129)">Buy</button>
                  </div>
            </div>
    
            <div class="pizza small_pizza">
                <h2>Small Pizza</h2>
                <img src="image.png" width="100">
                <h3>R49</h3>
                <div>
                    small pizza with 3 toppings 1 meat topping. 3 or less other topping.
                </div>
                <div style="display: flex; margin-top: 10px;">
                    <button x-on:click="addToCart('small', 49)">Buy</button>
                  </div>
            </div>
        </div>

    <!-- Include Alpine.js library -->
    <script src="https://cdn.jsdelivr.net/npm/alpinejs@3.3.0/dist/alpine.js" defer></script>
    <script>
        // Define the cartApp function
        function cartApp() {
            // Function to update the totals
            function updateTotals() {
                // Initialize a newTotals object
                const newTotals = {
                    small: 0,
                    medium: 0,
                    large: 0,
                    total: 0
                };

                // Calculate the totals based on the cart items
                this.cart.forEach((pizza) => {
                    const subtotal = pizza.price * pizza.quantity;
                    newTotals[pizza.size] += subtotal;
                    newTotals.total += subtotal;
                });

                // Update the totals property
                this.totals = newTotals;
            }

            // Function to decrement the quantity of a pizza size
            function decrement(size) {
                const pizza = this.cart.find((p) => p.size === size);
                if (pizza && pizza.quantity > 0) {
                    pizza.quantity--;
                    updateTotals.call(this);
                }
            }

            // Function to increment the quantity of a pizza size
            function increment(size) {
                const pizza = this.cart.find((p) => p.size === size);
                if (pizza) {
                    pizza.quantity++;
                    updateTotals.call(this);
                }
            }

            // Function to remove a pizza from the cart
            function removeFromCart(index) {
                const pizza = this.cart[index];
                pizza.quantity--;

                if (pizza.quantity === 0) {
                    this.cart.splice(index, 1);
                }

                updateTotals.call(this);
            }

            // Return the cartApp object
            return {
                cart: [
                    { size: 'small', price: 0, quantity: 0, showRemove: true },
                    { size: 'medium', price: 0, quantity: 0, showRemove: true },
                    { size: 'large', price: 0, quantity: 0, showRemove: true }
                ], // Array to store the cart items
                totals: {
                    small: 0,
                    medium: 0,
                    large: 0,
                    total: 0
                }, // Object to store the totals
                init() {
                    // Initialize properties for checkout
                    this.showCheckout = false;
                    this.paymentAmount = 0;
                    this.paymentMessage = "";
                },
                addToCart(size, price) {
                    // Check if the pizza size already exists in the cart
                    const duplicatePizzaIndex = this.cart.findIndex((pizza) => pizza.size === size);
                    if (duplicatePizzaIndex !== -1) {
                        // If exists, remove the duplicate
                        this.cart.splice(duplicatePizzaIndex, 1);
                    }

                    // Create a new pizza object and add it to the cart
                    const pizza = {
                        size,
                        price,
                        quantity: 1,
                        showRemove: true
                    };
                    this.cart.push(pizza);

                    updateTotals.call(this);
                },
                decrement,
                increment,
                removeFromCart,
                showCheckout: false,
                paymentAmount: 0,
                paymentMessage: "",
                checkout() {
                    // Show the checkout section
                    this.showCheckout = true;
                },

                processPayment() {
                    const paymentInput = document.querySelector('input[type="number"]');
                    const paymentAmount = parseFloat(paymentInput.value);

                    if (paymentAmount >= this.totals.total) {
                        const change = paymentAmount - this.totals.total;
                        this.paymentMessage = "Enjoy your pizzas! Change: R" + change.toFixed(2);
                        // Clear the cart and totals
                        // this.cart = [];
                        this.totals = {
                            small: 0,
                            medium: 0,
                            large: 0,
                            total: 0
                        };

                    } else {
                        this.paymentMessage = "Sorry - that is not enough money!";
                    }
                    // Clear the payment message after 3 seconds
                    setTimeout(() => {
                        this.paymentMessage = "";
                    }, 3000);
                }

            };
        }
    </script>




    <footer class="box">
        <div>Contact us at: 082 055 1646<br>
            <div align="end">Pizza Place</div>facebook: pizzaplace<br>
            <div align="end">Protea Glen</div>email: info@perfectpizza.co.za<br>
            <div align="end">Soweto</div>
        </div>
    </footer>
</body>

</html>